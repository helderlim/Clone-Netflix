{"version":3,"sources":["components/FeaturedMovie.js","components/MovieRow.js","tmdb.js","App.js","index.js"],"names":["item","firstDate","Date","first_air_date","genres","i","push","name","className","style","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","overview","href","id","join","title","items","results","length","map","key","src","poster_path","alt","original_title","API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","getMovieInfo","movieId","type","info","useState","moveiList","setMovieList","featuredData","setFeaturedData","useEffect","Tmdb","list","originals","filter","randomChosen","Math","floor","random","chosen","chosenInfo","loadAll","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c63064db.chunk.js","sourcesContent":["import './FeaturedMovie.css';\r\n\r\nimport React from 'react';\r\n\r\nexport default ({item}) =>{\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n    let genres = []\r\n    for(let i in item.genres){\r\n        genres.push( item.genres[i].name);\r\n    }\r\n\r\n    return( \r\n        <section className=\"featured\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--name\">{item.original_name}</div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                        <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\r\n                    </div>\r\n                    <div className=\"featured--description\">{item.overview}</div>\r\n                    <div className=\"featured--buttons\">\r\n                        <a href={`/watch/${item.id}`}>ðŸ˜ŽAssistir</a>\r\n                        <a href={`/list/add/${item.id}`}>+ Minha Lista</a>\r\n                    </div>\r\n                    <div className=\"featured--genres\"><strong>GÃªneros: </strong>{genres.join(', ')}</div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import './MovieRow.css';\r\n\r\nimport React from 'react';\r\n\r\nexport default ({ title, items}) =>{\r\n    return(\r\n        <div className=\"movieRow\">\r\n            <h2>{title}</h2>\r\n            <div className=\"movieRow--listarea\">\r\n                <div className=\"movieRow--list\">\r\n                    {items.results.length > 0 && items.results.map((item, key)=>(\r\n                        <div key={key} className=\"movieRow--item\">\r\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title}/>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}","const API_KEY = 'c5979ab4574fac6dc1d602debc6c1e5a';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json; \r\n}\r\n\r\nexport default{\r\n    getHomeList: async () => {\r\n        return[\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt_BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para VocÃª',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em Alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'AÃ§Ã£o',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'ComÃ©dia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentarios',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n        ];\r\n    },\r\n    getMovieInfo: async (movieId, type) =>{\r\n        let info = {}\r\n\r\n        if(movieId){\r\n            switch(type){\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n            }\r\n        }\r\n        return info;\r\n    }\r\n}","import './App.css';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport FeaturedMovie from './components/FeaturedMovie';\r\nimport MovieRow from './components/MovieRow';\r\nimport Tmdb from './tmdb';\r\n\r\nexport default () => {\r\n\r\n    const [moveiList, setMovieList] = useState([]);\r\n    const [featuredData, setFeaturedData] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        const loadAll = async () => {\r\n            //pegando a lista total \r\n            let list = await Tmdb.getHomeList();\r\n            setMovieList(list);\r\n\r\n            //pegando o filme em destaque \r\n            let originals = list.filter(i=>i.slug === 'originals');\r\n            let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1))\r\n            let chosen = originals[0].items.results[randomChosen];\r\n            let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\r\n            setFeaturedData(chosenInfo);\r\n        }\r\n        loadAll();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"page\">\r\n\r\n            {featuredData &&\r\n                <FeaturedMovie item={featuredData}/>\r\n            }\r\n\r\n        <section className=\"listis\">\r\n            {moveiList.map((item, key)=>(\r\n                <MovieRow key={key} \r\n                title={item.title} \r\n                items={item.items}/>\r\n            ))}\r\n        </section>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}