{"version":3,"sources":["components/FeaturedMovie/index.js","components/Header/index.js","components/MovieRow/index.js","tmdb.js","App.js","index.js"],"names":["FeaturedMovie","item","firstDate","Date","first_air_date","genres","i","push","name","className","style","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","overview","href","id","join","Header","black","src","alt","MovieRow","title","items","useState","scrollX","setScrollX","onClick","x","Math","round","window","innerWidth","fontSize","listW","results","length","marginLeft","width","map","key","poster_path","original_title","API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","getMovieInfo","movieId","type","info","moveiList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","role","aria-label","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.969775ee.chunk.js","sourcesContent":["import './FeaturedMovie.css';\r\n\r\nimport React from 'react';\r\n\r\n\r\nconst  FeaturedMovie = ({item}) =>{\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n    let genres = []\r\n    for(let i in item.genres){\r\n        genres.push( item.genres[i].name);\r\n    }\r\n\r\n    return( \r\n        <section className=\"featured\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--name\">{item.original_name}</div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                        <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\r\n                    </div>\r\n                    <div className=\"featured--description\">{item.overview}</div>\r\n                    <div className=\"featured--buttons\">\r\n                        <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">▶Assistir</a>\r\n                        <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">+ Minha Lista</a>\r\n                    </div>\r\n                    <div className=\"featured--genres\"><strong>Gêneros: </strong>{genres.join(', ')}</div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n   \r\n}\r\n\r\nexport default FeaturedMovie;","import './Header.css';\r\n\r\nimport React from 'react';\r\n\r\n const Header  =({black}) => {\r\n    \r\n        return (\r\n            <header className={black ? 'black' : ''}>\r\n                <div className=\"header--logo\">\r\n                    <a href=\"/\">\r\n                        <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"logo\" />\r\n                    </a>\r\n                </div>\r\n                <div className=\"header--user\">\r\n                    <a href=\"/\">\r\n                        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTjLIbMn5sDFXEXwIGSfKvUWDuZKMJ3xVGISw&usqp=CAU\" />\r\n                    </a>\r\n                </div>\r\n            </header>\r\n        );\r\n  \r\n}\r\nexport default Header;","import './MovieRow.css';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport React, {useState} from 'react';\r\n\r\nconst  MovieRow = ({title, items}) =>{\r\n    const [scrollX, setScrollX] = useState(-400);\r\n    const handleLefArrow = () =>{\r\n        let x = scrollX + Math.round(window.innerWidth / 2);\r\n        if(x > 0){\r\n            x = 0;\r\n        }\r\n        setScrollX(x)\r\n    }\r\n    const handleRightArrow = () =>{\r\n        let x = scrollX - Math.round(window.innerWidth / 2);\r\n        let listW = items.results.length * 150;\r\n        if(window.innerWidth - listW > x ){\r\n            x = (window.innerWidth - listW) - 60;\r\n        }\r\n        setScrollX(x)\r\n    }\r\n\r\n    return(\r\n        <div className=\"movieRow\">\r\n            <div className=\"movieRow--left\" onClick={handleLefArrow}>\r\n                <ArrowBackIosIcon style={{fontSize: 50}}/>\r\n            </div>\r\n            <div className=\"movieRow--right\" onClick={handleRightArrow}>\r\n                <ArrowForwardIosIcon style={{fontSize: 50}}/>\r\n            </div>\r\n            <h2>{title}</h2>\r\n            <div className=\"movieRow--listarea\">\r\n                <div className=\"movieRow--list\" style={{marginLeft: scrollX, width: items.results.length *150}}>\r\n                    {items.results.length > 0 && items.results.map((item, key)=>(\r\n                        <div key={key} className=\"movieRow--item\">\r\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title}/>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieRow;","const API_KEY = 'c5979ab4574fac6dc1d602debc6c1e5a';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json; \r\n}\r\n\r\nexport default{\r\n    getHomeList: async () => {\r\n        return[\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt_BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para Você',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em Alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentarios',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n        ];\r\n    },\r\n    getMovieInfo: async (movieId, type) =>{\r\n        let info = {}\r\n\r\n        if(movieId){\r\n            switch(type){\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n            }\r\n        }\r\n        return info;\r\n    }\r\n}","import './App.css';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport FeaturedMovie from './components/FeaturedMovie';\r\nimport Header from './components/Header';\r\nimport MovieRow from './components/MovieRow';\r\nimport Tmdb from './tmdb';\r\n\r\nexport default () => {\r\n\r\n    const [moveiList, setMovieList] = useState([]);\r\n    const [featuredData, setFeaturedData] = useState(null);\r\n    const [blackHeader, setBlackHeader] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        const loadAll = async () => {\r\n            //pegando a lista total \r\n            let list = await Tmdb.getHomeList();\r\n            setMovieList(list);\r\n\r\n            //pegando o filme em destaque \r\n            let originals = list.filter(i=>i.slug === 'originals');\r\n            let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1))\r\n            let chosen = originals[0].items.results[randomChosen];\r\n            let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\r\n            setFeaturedData(chosenInfo);\r\n        }\r\n        loadAll();\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        const scrollListener = () => {\r\n            if(window.scrollY > 10){\r\n                setBlackHeader(true);\r\n            }else{\r\n                setBlackHeader(false)\r\n            }\r\n        }   \r\n        window.addEventListener('scroll', scrollListener);\r\n\r\n        return () =>{\r\n            window.removeEventListener('scroll', scrollListener);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <Header black={blackHeader}/>\r\n            {featuredData &&\r\n                <FeaturedMovie item={featuredData}/>\r\n            }\r\n\r\n        <section className=\"lists\">\r\n            {moveiList.map((item, key)=>(\r\n                <MovieRow key={key} \r\n                title={item.title} \r\n                items={item.items}/>\r\n            ))}\r\n        </section>\r\n        <footer>\r\n            Feito com <span role=\"img\" aria-label=\"coração\">❤️</span> pelo Helder Lima<br /> \r\n            Direitos de Imagem para Netflix<br />\r\n            Dados pegos do site Themoviedb.org\r\n        </footer>\r\n\r\n        {moveiList.length <= 0 &&  \r\n        <div className=\"loading\">\r\n            <img src=\"https://steamuserimages-a.akamaihd.net/ugc/948471635620655778/092A8E2EB6F19BEADC8D3570DD7DC8432D7B6EEF/\" />\r\n        </div>\r\n}\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}